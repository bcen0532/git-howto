4. GIT 実験 / まとめ

    ssh による git server を立てる

    使用手順をまとめる

        タグを作ってみる

        svn との違い

            機能対応表

                リポジトリ作成

                    作業者情報の登録

                update

                    remoteからする場合

                        git pull origin master

                checkout

                add

                del

                commit

                revert

                branch

                merge

            SVNにない機能

                ローカルリポジトリ

                    git push origin master

                リモートリポジトリ

                    git push origin master

                branch

                    作成

                    切り替え

                        git checkout branch_name

                    マージ

                    削除

        実際の運用方法：

            開発の方法

                既存のリポジトリのワーキングコピーを取得する

                    git clone URL

                新しく自分で作成する

                    git init

                    git add

                    git commit

                        git push origin master

                        git push origin branch

                gitflow

            客先ごとのカスタマイズ

                ブランチ

                    共通のコードベースの維持


        内部構造

            SVN, CVSのような差分バックアップ方式とは大きく異なる

            ローカルにリポジトリがある

                全ファイル・履歴が圧縮されて保存

            ローカルと中央の区別はない

                （PUSHする権限があるかどうかだけ）

            何が嬉しいか：

                ファイル単位で残っているので、巻き戻し、マージが簡単

                project/.git/

            リポジトリとはすなわち.git以下のファイルの事

                HEAD: 現在のブランチの最新のコミットオブジェクトが格納されている

                hooks: コミットが行われた後自動で走らせたいスクリプトを設定出来る

                exclude: .gitignoreと同じだがこちらはローカルリポジトリのみの適応となる

                description: 外部プログラムでそのプロジェクトの表示をする際に使われる（オプション）。

                .git/objects/以下に全てのファイルを圧縮して格納する

                    blob: 名前 + 内容から生成したハッシュ値

                    tree: blobのリスト

                    commit オブジェクト, ブランチ, : treeのリスト 前のコミットのハッシュ値 + コミットメッセージ、

            クローンした場合
